"""init schema

Revision ID: b791137eb8b9
Revises: 
Create Date: 2025-07-06 13:04:45.289229

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'b791137eb8b9'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('hashed_password', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('client_id', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['client_id'], ['core.clients.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='core'
    )
    op.create_index(op.f('ix_core_users_email'), 'users', ['email'], unique=False, schema='core')
    op.create_index(op.f('ix_core_users_username'), 'users', ['username'], unique=False, schema='core')
    op.create_table('kpis',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('target_value', sa.Float(), nullable=False),
    sa.Column('current_value', sa.Float(), nullable=True),
    sa.Column('unit', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('owner_id', sa.UUID(), nullable=True),
    sa.Column('project_id', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['owner_id'], ['core.users.id'], ),
    sa.ForeignKeyConstraint(['project_id'], ['core.projects.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='core'
    )
    op.alter_column('clients', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               schema='core')
    op.drop_index(op.f('ix_core_clients_name'), table_name='clients', schema='core')
    op.add_column('okrs', sa.Column('period', sa.String(), nullable=True), schema='core')
    op.add_column('okrs', sa.Column('status', sa.String(), nullable=True), schema='core')
    op.add_column('okrs', sa.Column('owner_id', sa.UUID(), nullable=True), schema='core')
    op.add_column('okrs', sa.Column('project_id', sa.UUID(), nullable=True), schema='core')
    op.drop_constraint(op.f('okrs_client_id_fkey'), 'okrs', schema='core', type_='foreignkey')
    op.create_foreign_key(None, 'okrs', 'users', ['owner_id'], ['id'], source_schema='core', referent_schema='core')
    op.create_foreign_key(None, 'okrs', 'projects', ['project_id'], ['id'], source_schema='core', referent_schema='core')
    op.drop_column('okrs', 'client_id', schema='core')
    op.alter_column('projects', 'client_id',
               existing_type=sa.UUID(),
               nullable=True,
               schema='core')
    op.add_column('tasks', sa.Column('assignee_id', sa.UUID(), nullable=True), schema='core')
    op.alter_column('tasks', 'project_id',
               existing_type=sa.UUID(),
               nullable=True,
               schema='core')
    op.create_foreign_key(None, 'tasks', 'users', ['assignee_id'], ['id'], source_schema='core', referent_schema='core')
    op.drop_column('tasks', 'description', schema='core')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('tasks', sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True), schema='core')
    op.drop_constraint(None, 'tasks', schema='core', type_='foreignkey')
    op.alter_column('tasks', 'project_id',
               existing_type=sa.UUID(),
               nullable=False,
               schema='core')
    op.drop_column('tasks', 'assignee_id', schema='core')
    op.alter_column('projects', 'client_id',
               existing_type=sa.UUID(),
               nullable=False,
               schema='core')
    op.add_column('okrs', sa.Column('client_id', sa.UUID(), autoincrement=False, nullable=False), schema='core')
    op.drop_constraint(None, 'okrs', schema='core', type_='foreignkey')
    op.drop_constraint(None, 'okrs', schema='core', type_='foreignkey')
    op.create_foreign_key(op.f('okrs_client_id_fkey'), 'okrs', 'clients', ['client_id'], ['id'], source_schema='core', referent_schema='core')
    op.drop_column('okrs', 'project_id', schema='core')
    op.drop_column('okrs', 'owner_id', schema='core')
    op.drop_column('okrs', 'status', schema='core')
    op.drop_column('okrs', 'period', schema='core')
    op.create_index(op.f('ix_core_clients_name'), 'clients', ['name'], unique=True, schema='core')
    op.alter_column('clients', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               schema='core')
    op.drop_table('kpis', schema='core')
    op.drop_index(op.f('ix_core_users_username'), table_name='users', schema='core')
    op.drop_index(op.f('ix_core_users_email'), table_name='users', schema='core')
    op.drop_table('users', schema='core')
    # ### end Alembic commands ###
